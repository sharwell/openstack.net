//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenStackNetTests.Live {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OpenStackNetTests.Live.TestResources", typeof(TestResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;heat_template_version&quot;: &quot;2013-05-23&quot;,
        ///    &quot;description&quot;: &quot;Heat Orchestration Template that spins up a resource group with 2 Rackspace Cloud Servers and a Cloud Load Balancer&quot;,
        ///    &quot;resources&quot;: {
        ///        &quot;web_nodes&quot;: {
        ///            &quot;type&quot;: &quot;OS::HEAT::ResourceGroup&quot;,
        ///            &quot;properties&quot;: {
        ///                &quot;count&quot;: 2,
        ///                &quot;resource_def&quot;: {
        ///                    &quot;type&quot;: &quot;Rackspace::Cloud::Server&quot;,
        ///                    &quot;properties&quot;: {
        ///                        &quot;flavor&quot;: &quot;1 GB Perform [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateStackTemplate {
            get {
                return ResourceManager.GetString("CreateStackTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;heat_template_version&quot;: &quot;2013-05-23&quot;,
        ///    &quot;description&quot;: &quot;Heat Orchestration Template that spins up a resource group with 2 Rackspace Cloud Servers and a Cloud Load Balancer&quot;,
        ///    &quot;resources&quot;: {
        ///        &quot;web_nodes&quot;: {
        ///            &quot;type&quot;: &quot;OS::HEAT::ResourceGroup&quot;,
        ///            &quot;properties&quot;: {
        ///                &quot;count&quot;: 2,
        ///                &quot;resource_def&quot;: {
        ///                    &quot;type&quot;: &quot;Rackspace::Cloud::Server&quot;,
        ///                    &quot;properties&quot;: {
        ///                        &quot;flavor&quot;: &quot;1 GB Perform [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateStackTemplate {
            get {
                return ResourceManager.GetString("UpdateStackTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;heat_template_version&quot;: &quot;2013-05-23&quot;,
        ///    &quot;parameters&quot;: {
        ///        &quot;key_name&quot;: {
        ///            &quot;type&quot;: &quot;string&quot;,
        ///            &quot;description&quot;: &quot;A parameter created for unit testing&quot;
        ///        }
        ///    },
        ///    &quot;resources&quot;: {
        ///            &quot;compute_instance&quot;: {
        ///                &quot;type&quot;: &quot;Rackspace::Cloud::Server&quot;,
        ///                &quot;properties&quot;: {
        ///                    &quot;flavor&quot;: &quot;1 GB Performance&quot;,
        ///                    &quot;image&quot;: &quot;CentOS 6.5&quot;,
        ///                    &quot;name&quot;: &quot;Single Server Stack&quot;
        ///                } [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ValidateStackTemplateJson {
            get {
                return ResourceManager.GetString("ValidateStackTemplateJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to heat_template_version: 2013-05-23
        ///
        ///description: A simple live testing template
        ///
        ///resources:
        ///  compute_instance:
        ///    type: &quot;&quot;Rackspace::Cloud::Server&quot;&quot;
        ///    properties:
        ///      flavor: 1 GB Performance
        ///      image: CentOS 6.5
        ///      name: Single Server Stack
        ///
        ///outputs:
        ///  public_ip:
        ///    description: public IP address of the deployed compute instance
        ///    value: { get_attr: [compute_instance, accessIPv4] }
        ///.
        /// </summary>
        internal static string ValidateStackTemplateYaml {
            get {
                return ResourceManager.GetString("ValidateStackTemplateYaml", resourceCulture);
            }
        }
    }
}
